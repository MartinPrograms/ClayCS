//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (https://www.swig.org).
// Version 4.3.0
//
// Do not make changes to this file unless you know what you are doing - modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System.Runtime.InteropServices;

public class ClayLibrary {
  public static int CLAY__ELEMENT_DEFINITION_LATCH {
    set {
      ClayLibraryPINVOKE.CLAY__ELEMENT_DEFINITION_LATCH_set(value);
    } 
    get {
      int ret = ClayLibraryPINVOKE.CLAY__ELEMENT_DEFINITION_LATCH_get();
      return ret;
    } 
  }

  public static Clay_LayoutConfig CLAY_LAYOUT_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY_LAYOUT_DEFAULT_set(Clay_LayoutConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY_LAYOUT_DEFAULT_get();
      Clay_LayoutConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutConfig(cPtr, false);
      return ret;
    } 
  }

  public static uint Clay_MinMemorySize() {
    uint ret = ClayLibraryPINVOKE.Clay_MinMemorySize();
    return ret;
  }

  public static Clay_Arena Clay_CreateArenaWithCapacityAndMemory(uint capacity, HandleRef offset) {
    Clay_Arena ret = new Clay_Arena(ClayLibraryPINVOKE.Clay_CreateArenaWithCapacityAndMemory(capacity, (offset)), true);
    return ret;
  }

  public static void Clay_SetPointerState(Clay_Vector2 position, bool pointerDown) {
    ClayLibraryPINVOKE.Clay_SetPointerState(Clay_Vector2.getCPtr(position), pointerDown);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay_Initialize(Clay_Arena arena, Clay_Dimensions layoutDimensions) {
    ClayLibraryPINVOKE.Clay_Initialize(Clay_Arena.getCPtr(arena), Clay_Dimensions.getCPtr(layoutDimensions));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay_UpdateScrollContainers(bool enableDragScrolling, Clay_Vector2 scrollDelta, float deltaTime) {
    ClayLibraryPINVOKE.Clay_UpdateScrollContainers(enableDragScrolling, Clay_Vector2.getCPtr(scrollDelta), deltaTime);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay_SetLayoutDimensions(Clay_Dimensions dimensions) {
    ClayLibraryPINVOKE.Clay_SetLayoutDimensions(Clay_Dimensions.getCPtr(dimensions));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay_BeginLayout() {
    ClayLibraryPINVOKE.Clay_BeginLayout();
  }

  public static Clay_RenderCommandArray Clay_EndLayout() {
    Clay_RenderCommandArray ret = new Clay_RenderCommandArray(ClayLibraryPINVOKE.Clay_EndLayout(), true);
    return ret;
  }

  public static Clay_ElementId Clay_GetElementId(Clay_String idString) {
    Clay_ElementId ret = new Clay_ElementId(ClayLibraryPINVOKE.Clay_GetElementId(Clay_String.getCPtr(idString)), true);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ElementId Clay_GetElementIdWithIndex(Clay_String idString, uint index) {
    Clay_ElementId ret = new Clay_ElementId(ClayLibraryPINVOKE.Clay_GetElementIdWithIndex(Clay_String.getCPtr(idString), index), true);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool Clay_Hovered() {
    bool ret = ClayLibraryPINVOKE.Clay_Hovered();
    return ret;
  }

  public static void Clay_OnHover(SWIGTYPE_p_f_Clay_ElementId_Clay_PointerData_intptr_t__void onHoverFunction, SWIGTYPE_p_intptr_t userData) {
    ClayLibraryPINVOKE.Clay_OnHover(SWIGTYPE_p_f_Clay_ElementId_Clay_PointerData_intptr_t__void.getCPtr(onHoverFunction), SWIGTYPE_p_intptr_t.getCPtr(userData));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Clay_ScrollContainerData Clay_GetScrollContainerData(Clay_ElementId id) {
    Clay_ScrollContainerData ret = new Clay_ScrollContainerData(ClayLibraryPINVOKE.Clay_GetScrollContainerData(Clay_ElementId.getCPtr(id)), true);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void Clay_SetMeasureTextFunction(SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions measureTextFunction) {
    ClayLibraryPINVOKE.Clay_SetMeasureTextFunction(SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions.getCPtr(measureTextFunction));
  }

  public static void Clay_SetQueryScrollOffsetFunction(SWIGTYPE_p_f_unsigned_int__Clay_Vector2 queryScrollOffsetFunction) {
    ClayLibraryPINVOKE.Clay_SetQueryScrollOffsetFunction(SWIGTYPE_p_f_unsigned_int__Clay_Vector2.getCPtr(queryScrollOffsetFunction));
  }

  public static Clay_RenderCommand Clay_RenderCommandArray_Get(Clay_RenderCommandArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay_RenderCommandArray_Get(Clay_RenderCommandArray.getCPtr(array), index);
    Clay_RenderCommand ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RenderCommand(cPtr, false);
    return ret;
  }

  public static void Clay_SetDebugModeEnabled(bool enabled) {
    ClayLibraryPINVOKE.Clay_SetDebugModeEnabled(enabled);
  }

  public static void Clay_SetCullingEnabled(bool enabled) {
    ClayLibraryPINVOKE.Clay_SetCullingEnabled(enabled);
  }

  public static void Clay__OpenElement() {
    ClayLibraryPINVOKE.Clay__OpenElement();
  }

  public static void Clay__CloseElement() {
    ClayLibraryPINVOKE.Clay__CloseElement();
  }

  public static Clay_LayoutConfig Clay__StoreLayoutConfig(Clay_LayoutConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreLayoutConfig(Clay_LayoutConfig.getCPtr(config));
    Clay_LayoutConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void Clay__ElementPostConfiguration() {
    ClayLibraryPINVOKE.Clay__ElementPostConfiguration();
  }

  public static void Clay__AttachId(Clay_ElementId id) {
    ClayLibraryPINVOKE.Clay__AttachId(Clay_ElementId.getCPtr(id));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay__AttachLayoutConfig(Clay_LayoutConfig config) {
    ClayLibraryPINVOKE.Clay__AttachLayoutConfig(Clay_LayoutConfig.getCPtr(config));
  }

  public static void Clay__AttachElementConfig(Clay_ElementConfigUnion config, Clay__ElementConfigType type) {
    ClayLibraryPINVOKE.Clay__AttachElementConfig(Clay_ElementConfigUnion.getCPtr(config), (int)type);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Clay_RectangleElementConfig Clay__StoreRectangleElementConfig(Clay_RectangleElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreRectangleElementConfig(Clay_RectangleElementConfig.getCPtr(config));
    Clay_RectangleElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RectangleElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_TextElementConfig Clay__StoreTextElementConfig(Clay_TextElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreTextElementConfig(Clay_TextElementConfig.getCPtr(config));
    Clay_TextElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_TextElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ImageElementConfig Clay__StoreImageElementConfig(Clay_ImageElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreImageElementConfig(Clay_ImageElementConfig.getCPtr(config));
    Clay_ImageElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ImageElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_FloatingElementConfig Clay__StoreFloatingElementConfig(Clay_FloatingElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreFloatingElementConfig(Clay_FloatingElementConfig.getCPtr(config));
    Clay_FloatingElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_FloatingElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_CustomElementConfig Clay__StoreCustomElementConfig(Clay_CustomElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreCustomElementConfig(Clay_CustomElementConfig.getCPtr(config));
    Clay_CustomElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_CustomElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ScrollElementConfig Clay__StoreScrollElementConfig(Clay_ScrollElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreScrollElementConfig(Clay_ScrollElementConfig.getCPtr(config));
    Clay_ScrollElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ScrollElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_BorderElementConfig Clay__StoreBorderElementConfig(Clay_BorderElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StoreBorderElementConfig(Clay_BorderElementConfig.getCPtr(config));
    Clay_BorderElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_BorderElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ElementId Clay__HashString(Clay_String key, uint offset, uint seed) {
    Clay_ElementId ret = new Clay_ElementId(ClayLibraryPINVOKE.Clay__HashString__SWIG_0(Clay_String.getCPtr(key), offset, seed), true);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void Clay__Noop() {
    ClayLibraryPINVOKE.Clay__Noop();
  }

  public static void Clay__OpenTextElement(Clay_String text, Clay_TextElementConfig textConfig) {
    ClayLibraryPINVOKE.Clay__OpenTextElement(Clay_String.getCPtr(text), Clay_TextElementConfig.getCPtr(textConfig));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Clay_Color Clay__debugViewHighlightColor {
    set {
      ClayLibraryPINVOKE.Clay__debugViewHighlightColor_set(Clay_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__debugViewHighlightColor_get();
      Clay_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Color(cPtr, false);
      return ret;
    } 
  }

  public static uint Clay__debugViewWidth {
    set {
      ClayLibraryPINVOKE.Clay__debugViewWidth_set(value);
    } 
    get {
      uint ret = ClayLibraryPINVOKE.Clay__debugViewWidth_get();
      return ret;
    } 
  }

  public static bool Clay__debugMaxElementsLatch {
    set {
      ClayLibraryPINVOKE.Clay__debugMaxElementsLatch_set(value);
    } 
    get {
      bool ret = ClayLibraryPINVOKE.Clay__debugMaxElementsLatch_get();
      return ret;
    } 
  }

  public static bool Clay__warningsEnabled {
    set {
      ClayLibraryPINVOKE.Clay__warningsEnabled_set(value);
    } 
    get {
      bool ret = ClayLibraryPINVOKE.Clay__warningsEnabled_get();
      return ret;
    } 
  }

  public static Clay_String CLAY__SPACECHAR {
    set {
      ClayLibraryPINVOKE.CLAY__SPACECHAR_set(Clay_String.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__SPACECHAR_get();
      Clay_String ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_String(cPtr, false);
      return ret;
    } 
  }

  public static Clay_String CLAY__STRING_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__STRING_DEFAULT_set(Clay_String.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__STRING_DEFAULT_get();
      Clay_String ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_String(cPtr, false);
      return ret;
    } 
  }

  public static Clay_BooleanWarnings Clay__booleanWarnings {
    set {
      ClayLibraryPINVOKE.Clay__booleanWarnings_set(Clay_BooleanWarnings.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__booleanWarnings_get();
      Clay_BooleanWarnings ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_BooleanWarnings(cPtr, false);
      return ret;
    } 
  }

  public static Clay__Warning CLAY__WARNING_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__WARNING_DEFAULT_set(Clay__Warning.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__WARNING_DEFAULT_get();
      Clay__Warning ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__Warning(cPtr, false);
      return ret;
    } 
  }

  public static Clay__WarningArray Clay__WarningArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__WarningArray ret = new Clay__WarningArray(ClayLibraryPINVOKE.Clay__WarningArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__WarningArray Clay_warnings {
    set {
      ClayLibraryPINVOKE.Clay_warnings_set(Clay__WarningArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay_warnings_get();
      Clay__WarningArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__WarningArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__Warning Clay__WarningArray_Add(Clay__WarningArray array, Clay__Warning item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__WarningArray_Add(Clay__WarningArray.getCPtr(array), Clay__Warning.getCPtr(item));
    Clay__Warning ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__Warning(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_void Clay__Array_Allocate_Arena(uint capacity, uint itemSize, uint alignment, Clay_Arena arena) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__Array_Allocate_Arena(capacity, itemSize, alignment, Clay_Arena.getCPtr(arena));
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public static bool Clay__Array_RangeCheck(int index, uint length) {
    bool ret = ClayLibraryPINVOKE.Clay__Array_RangeCheck(index, length);
    return ret;
  }

  public static bool Clay__Array_IncrementCapacityCheck(uint length, uint capacity) {
    bool ret = ClayLibraryPINVOKE.Clay__Array_IncrementCapacityCheck(length, capacity);
    return ret;
  }

  public static bool CLAY__BOOL_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__BOOL_DEFAULT_set(value);
    } 
    get {
      bool ret = ClayLibraryPINVOKE.CLAY__BOOL_DEFAULT_get();
      return ret;
    } 
  }

  public static Clay__BoolArray Clay__BoolArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__BoolArray ret = new Clay__BoolArray(ClayLibraryPINVOKE.Clay__BoolArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_ElementId CLAY__ELEMENT_ID_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__ELEMENT_ID_DEFAULT_set(Clay_ElementId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__ELEMENT_ID_DEFAULT_get();
      Clay_ElementId ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementId(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ElementIdArray Clay__ElementIdArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__ElementIdArray ret = new Clay__ElementIdArray(ClayLibraryPINVOKE.Clay__ElementIdArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_ElementId Clay__ElementIdArray_Get(Clay__ElementIdArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ElementIdArray_Get(Clay__ElementIdArray.getCPtr(array), index);
    Clay_ElementId ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementId(cPtr, false);
    return ret;
  }

  public static Clay_ElementId Clay__ElementIdArray_Add(Clay__ElementIdArray array, Clay_ElementId item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ElementIdArray_Add(Clay__ElementIdArray.getCPtr(array), Clay_ElementId.getCPtr(item));
    Clay_ElementId ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementId(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ElementConfig CLAY__ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__ELEMENT_CONFIG_DEFAULT_set(Clay_ElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__ELEMENT_CONFIG_DEFAULT_get();
      Clay_ElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ElementConfigArray Clay__ElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__ElementConfigArray ret = new Clay__ElementConfigArray(ClayLibraryPINVOKE.Clay__ElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_ElementConfig Clay__ElementConfigArray_Get(Clay__ElementConfigArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ElementConfigArray_Get(Clay__ElementConfigArray.getCPtr(array), index);
    Clay_ElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementConfig(cPtr, false);
    return ret;
  }

  public static Clay_ElementConfig Clay__ElementConfigArray_Add(Clay__ElementConfigArray array, Clay_ElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ElementConfigArray_Add(Clay__ElementConfigArray.getCPtr(array), Clay_ElementConfig.getCPtr(item));
    Clay_ElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ElementConfig Clay__ElementConfigArraySlice_Get(Clay__ElementConfigArraySlice slice, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ElementConfigArraySlice_Get(Clay__ElementConfigArraySlice.getCPtr(slice), index);
    Clay_ElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementConfig(cPtr, false);
    return ret;
  }

  public static Clay__LayoutConfigArray Clay__LayoutConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__LayoutConfigArray ret = new Clay__LayoutConfigArray(ClayLibraryPINVOKE.Clay__LayoutConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_LayoutConfig Clay__LayoutConfigArray_Add(Clay__LayoutConfigArray array, Clay_LayoutConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutConfigArray_Add(Clay__LayoutConfigArray.getCPtr(array), Clay_LayoutConfig.getCPtr(item));
    Clay_LayoutConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_RectangleElementConfig CLAY__RECTANGLE_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__RECTANGLE_ELEMENT_CONFIG_DEFAULT_set(Clay_RectangleElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__RECTANGLE_ELEMENT_CONFIG_DEFAULT_get();
      Clay_RectangleElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RectangleElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__RectangleElementConfigArray Clay__RectangleElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__RectangleElementConfigArray ret = new Clay__RectangleElementConfigArray(ClayLibraryPINVOKE.Clay__RectangleElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_RectangleElementConfig Clay__RectangleElementConfigArray_Add(Clay__RectangleElementConfigArray array, Clay_RectangleElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__RectangleElementConfigArray_Add(Clay__RectangleElementConfigArray.getCPtr(array), Clay_RectangleElementConfig.getCPtr(item));
    Clay_RectangleElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RectangleElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_TextElementConfig CLAY__TEXT_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__TEXT_ELEMENT_CONFIG_DEFAULT_set(Clay_TextElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__TEXT_ELEMENT_CONFIG_DEFAULT_get();
      Clay_TextElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_TextElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__TextElementConfigArray Clay__TextElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__TextElementConfigArray ret = new Clay__TextElementConfigArray(ClayLibraryPINVOKE.Clay__TextElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_TextElementConfig Clay__TextElementConfigArray_Add(Clay__TextElementConfigArray array, Clay_TextElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__TextElementConfigArray_Add(Clay__TextElementConfigArray.getCPtr(array), Clay_TextElementConfig.getCPtr(item));
    Clay_TextElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_TextElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ImageElementConfig CLAY__IMAGE_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__IMAGE_ELEMENT_CONFIG_DEFAULT_set(Clay_ImageElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__IMAGE_ELEMENT_CONFIG_DEFAULT_get();
      Clay_ImageElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ImageElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ImageElementConfigArray Clay__ImageElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__ImageElementConfigArray ret = new Clay__ImageElementConfigArray(ClayLibraryPINVOKE.Clay__ImageElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_ImageElementConfig Clay__ImageElementConfigArray_Add(Clay__ImageElementConfigArray array, Clay_ImageElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ImageElementConfigArray_Add(Clay__ImageElementConfigArray.getCPtr(array), Clay_ImageElementConfig.getCPtr(item));
    Clay_ImageElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ImageElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_FloatingElementConfig CLAY__FLOATING_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__FLOATING_ELEMENT_CONFIG_DEFAULT_set(Clay_FloatingElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__FLOATING_ELEMENT_CONFIG_DEFAULT_get();
      Clay_FloatingElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_FloatingElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__FloatingElementConfigArray Clay__FloatingElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__FloatingElementConfigArray ret = new Clay__FloatingElementConfigArray(ClayLibraryPINVOKE.Clay__FloatingElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_FloatingElementConfig Clay__FloatingElementConfigArray_Add(Clay__FloatingElementConfigArray array, Clay_FloatingElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__FloatingElementConfigArray_Add(Clay__FloatingElementConfigArray.getCPtr(array), Clay_FloatingElementConfig.getCPtr(item));
    Clay_FloatingElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_FloatingElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_CustomElementConfig CLAY__CUSTOM_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__CUSTOM_ELEMENT_CONFIG_DEFAULT_set(Clay_CustomElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__CUSTOM_ELEMENT_CONFIG_DEFAULT_get();
      Clay_CustomElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_CustomElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__CustomElementConfigArray Clay__CustomElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__CustomElementConfigArray ret = new Clay__CustomElementConfigArray(ClayLibraryPINVOKE.Clay__CustomElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_CustomElementConfig Clay__CustomElementConfigArray_Add(Clay__CustomElementConfigArray array, Clay_CustomElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__CustomElementConfigArray_Add(Clay__CustomElementConfigArray.getCPtr(array), Clay_CustomElementConfig.getCPtr(item));
    Clay_CustomElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_CustomElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_ScrollElementConfig CLAY__SCROLL_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__SCROLL_ELEMENT_CONFIG_DEFAULT_set(Clay_ScrollElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__SCROLL_ELEMENT_CONFIG_DEFAULT_get();
      Clay_ScrollElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ScrollElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ScrollElementConfigArray Clay__ScrollElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__ScrollElementConfigArray ret = new Clay__ScrollElementConfigArray(ClayLibraryPINVOKE.Clay__ScrollElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_ScrollElementConfig Clay__ScrollElementConfigArray_Add(Clay__ScrollElementConfigArray array, Clay_ScrollElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ScrollElementConfigArray_Add(Clay__ScrollElementConfigArray.getCPtr(array), Clay_ScrollElementConfig.getCPtr(item));
    Clay_ScrollElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ScrollElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__StringArray Clay__StringArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__StringArray ret = new Clay__StringArray(ClayLibraryPINVOKE.Clay__StringArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_String Clay__StringArray_Add(Clay__StringArray array, Clay_String item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__StringArray_Add(Clay__StringArray.getCPtr(array), Clay_String.getCPtr(item));
    Clay_String ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_String(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__TextElementData CLAY__TEXT_ELEMENT_DATA_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__TEXT_ELEMENT_DATA_DEFAULT_set(Clay__TextElementData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__TEXT_ELEMENT_DATA_DEFAULT_get();
      Clay__TextElementData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__TextElementData(cPtr, false);
      return ret;
    } 
  }

  public static Clay__TextElementDataArray Clay__TextElementDataArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__TextElementDataArray ret = new Clay__TextElementDataArray(ClayLibraryPINVOKE.Clay__TextElementDataArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__TextElementData Clay__TextElementDataArray_Get(Clay__TextElementDataArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__TextElementDataArray_Get(Clay__TextElementDataArray.getCPtr(array), index);
    Clay__TextElementData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__TextElementData(cPtr, false);
    return ret;
  }

  public static Clay__TextElementData Clay__TextElementDataArray_Add(Clay__TextElementDataArray array, Clay__TextElementData item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__TextElementDataArray_Add(Clay__TextElementDataArray.getCPtr(array), Clay__TextElementData.getCPtr(item));
    Clay__TextElementData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__TextElementData(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_BorderElementConfig CLAY__BORDER_ELEMENT_CONFIG_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__BORDER_ELEMENT_CONFIG_DEFAULT_set(Clay_BorderElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__BORDER_ELEMENT_CONFIG_DEFAULT_get();
      Clay_BorderElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_BorderElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__BorderElementConfigArray Clay__BorderElementConfigArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__BorderElementConfigArray ret = new Clay__BorderElementConfigArray(ClayLibraryPINVOKE.Clay__BorderElementConfigArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_BorderElementConfig Clay__BorderElementConfigArray_Add(Clay__BorderElementConfigArray array, Clay_BorderElementConfig item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__BorderElementConfigArray_Add(Clay__BorderElementConfigArray.getCPtr(array), Clay_BorderElementConfig.getCPtr(item));
    Clay_BorderElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_BorderElementConfig(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_LayoutElement CLAY__LAYOUT_ELEMENT_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_DEFAULT_set(Clay_LayoutElement.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_DEFAULT_get();
      Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElement(cPtr, false);
      return ret;
    } 
  }

  public static Clay_LayoutElementArray Clay_LayoutElementArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay_LayoutElementArray ret = new Clay_LayoutElementArray(ClayLibraryPINVOKE.Clay_LayoutElementArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_LayoutElement Clay_LayoutElementArray_Add(Clay_LayoutElementArray array, Clay_LayoutElement item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay_LayoutElementArray_Add(Clay_LayoutElementArray.getCPtr(array), Clay_LayoutElement.getCPtr(item));
    Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElement(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_LayoutElement Clay_LayoutElementArray_Get(Clay_LayoutElementArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay_LayoutElementArray_Get(Clay_LayoutElementArray.getCPtr(array), index);
    Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElement(cPtr, false);
    return ret;
  }

  public static Clay__LayoutElementPointerArray Clay__LayoutElementPointerArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__LayoutElementPointerArray ret = new Clay__LayoutElementPointerArray(ClayLibraryPINVOKE.Clay__LayoutElementPointerArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static SWIGTYPE_p_p_Clay_LayoutElement Clay__LayoutElementPointerArray_Add(Clay__LayoutElementPointerArray array, Clay_LayoutElement item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementPointerArray_Add(Clay__LayoutElementPointerArray.getCPtr(array), Clay_LayoutElement.getCPtr(item));
    SWIGTYPE_p_p_Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_p_Clay_LayoutElement(cPtr, false);
    return ret;
  }

  public static Clay_LayoutElement Clay__LayoutElementPointerArray_Get(Clay__LayoutElementPointerArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementPointerArray_Get(Clay__LayoutElementPointerArray.getCPtr(array), index);
    Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElement(cPtr, false);
    return ret;
  }

  public static Clay_LayoutElement Clay__LayoutElementPointerArray_RemoveSwapback(Clay__LayoutElementPointerArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementPointerArray_RemoveSwapback(Clay__LayoutElementPointerArray.getCPtr(array), index);
    Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElement(cPtr, false);
    return ret;
  }

  public static Clay_RenderCommand CLAY__RENDER_COMMAND_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__RENDER_COMMAND_DEFAULT_set(Clay_RenderCommand.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__RENDER_COMMAND_DEFAULT_get();
      Clay_RenderCommand ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RenderCommand(cPtr, false);
      return ret;
    } 
  }

  public static Clay_RenderCommandArray Clay_RenderCommandArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay_RenderCommandArray ret = new Clay_RenderCommandArray(ClayLibraryPINVOKE.Clay_RenderCommandArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_RenderCommand Clay_RenderCommandArray_Add(Clay_RenderCommandArray array, Clay_RenderCommand item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay_RenderCommandArray_Add(Clay_RenderCommandArray.getCPtr(array), Clay_RenderCommand.getCPtr(item));
    Clay_RenderCommand ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RenderCommand(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__ScrollContainerDataInternal CLAY__SCROLL_CONTAINER_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__SCROLL_CONTAINER_DEFAULT_set(Clay__ScrollContainerDataInternal.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__SCROLL_CONTAINER_DEFAULT_get();
      Clay__ScrollContainerDataInternal ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ScrollContainerDataInternal(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ScrollContainerDataInternalArray Clay__ScrollContainerDataInternalArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__ScrollContainerDataInternalArray ret = new Clay__ScrollContainerDataInternalArray(ClayLibraryPINVOKE.Clay__ScrollContainerDataInternalArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__ScrollContainerDataInternal Clay__ScrollContainerDataInternalArray_Add(Clay__ScrollContainerDataInternalArray array, Clay__ScrollContainerDataInternal item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ScrollContainerDataInternalArray_Add(Clay__ScrollContainerDataInternalArray.getCPtr(array), Clay__ScrollContainerDataInternal.getCPtr(item));
    Clay__ScrollContainerDataInternal ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ScrollContainerDataInternal(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__ScrollContainerDataInternal Clay__ScrollContainerDataInternalArray_Get(Clay__ScrollContainerDataInternalArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__ScrollContainerDataInternalArray_Get(Clay__ScrollContainerDataInternalArray.getCPtr(array), index);
    Clay__ScrollContainerDataInternal ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ScrollContainerDataInternal(cPtr, false);
    return ret;
  }

  public static Clay__ScrollContainerDataInternal Clay__ScrollContainerDataInternalArray_RemoveSwapback(Clay__ScrollContainerDataInternalArray array, int index) {
    Clay__ScrollContainerDataInternal ret = new Clay__ScrollContainerDataInternal(ClayLibraryPINVOKE.Clay__ScrollContainerDataInternalArray_RemoveSwapback(Clay__ScrollContainerDataInternalArray.getCPtr(array), index), true);
    return ret;
  }

  public static Clay__DebugElementData CLAY__DEBUG_ELEMENT_DATA_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__DEBUG_ELEMENT_DATA_DEFAULT_set(Clay__DebugElementData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__DEBUG_ELEMENT_DATA_DEFAULT_get();
      Clay__DebugElementData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__DebugElementData(cPtr, false);
      return ret;
    } 
  }

  public static Clay__DebugElementDataArray Clay__DebugElementDataArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__DebugElementDataArray ret = new Clay__DebugElementDataArray(ClayLibraryPINVOKE.Clay__DebugElementDataArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__DebugElementData Clay__DebugElementDataArray_Add(Clay__DebugElementDataArray array, Clay__DebugElementData item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__DebugElementDataArray_Add(Clay__DebugElementDataArray.getCPtr(array), Clay__DebugElementData.getCPtr(item));
    Clay__DebugElementData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__DebugElementData(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__DebugElementData Clay__DebugElementDataArray_Get(Clay__DebugElementDataArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__DebugElementDataArray_Get(Clay__DebugElementDataArray.getCPtr(array), index);
    Clay__DebugElementData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__DebugElementData(cPtr, false);
    return ret;
  }

  public static Clay_LayoutElementHashMapItem CLAY__LAYOUT_ELEMENT_HASH_MAP_ITEM_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_HASH_MAP_ITEM_DEFAULT_set(Clay_LayoutElementHashMapItem.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_HASH_MAP_ITEM_DEFAULT_get();
      Clay_LayoutElementHashMapItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElementHashMapItem(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementHashMapItemArray Clay__LayoutElementHashMapItemArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__LayoutElementHashMapItemArray ret = new Clay__LayoutElementHashMapItemArray(ClayLibraryPINVOKE.Clay__LayoutElementHashMapItemArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_LayoutElementHashMapItem Clay__LayoutElementHashMapItemArray_Get(Clay__LayoutElementHashMapItemArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementHashMapItemArray_Get(Clay__LayoutElementHashMapItemArray.getCPtr(array), index);
    Clay_LayoutElementHashMapItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElementHashMapItem(cPtr, false);
    return ret;
  }

  public static Clay_LayoutElementHashMapItem Clay__LayoutElementHashMapItemArray_Add(Clay__LayoutElementHashMapItemArray array, Clay_LayoutElementHashMapItem item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementHashMapItemArray_Add(Clay__LayoutElementHashMapItemArray.getCPtr(array), Clay_LayoutElementHashMapItem.getCPtr(item));
    Clay_LayoutElementHashMapItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElementHashMapItem(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__MeasuredWord CLAY__MEASURED_WORD_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__MEASURED_WORD_DEFAULT_set(Clay__MeasuredWord.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__MEASURED_WORD_DEFAULT_get();
      Clay__MeasuredWord ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasuredWord(cPtr, false);
      return ret;
    } 
  }

  public static Clay__MeasuredWordArray Clay__MeasuredWordArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__MeasuredWordArray ret = new Clay__MeasuredWordArray(ClayLibraryPINVOKE.Clay__MeasuredWordArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__MeasuredWord Clay__MeasuredWordArray_Get(Clay__MeasuredWordArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__MeasuredWordArray_Get(Clay__MeasuredWordArray.getCPtr(array), index);
    Clay__MeasuredWord ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasuredWord(cPtr, false);
    return ret;
  }

  public static void Clay__MeasuredWordArray_Set(Clay__MeasuredWordArray array, int index, Clay__MeasuredWord value) {
    ClayLibraryPINVOKE.Clay__MeasuredWordArray_Set(Clay__MeasuredWordArray.getCPtr(array), index, Clay__MeasuredWord.getCPtr(value));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Clay__MeasuredWord Clay__MeasuredWordArray_Add(Clay__MeasuredWordArray array, Clay__MeasuredWord item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__MeasuredWordArray_Add(Clay__MeasuredWordArray.getCPtr(array), Clay__MeasuredWord.getCPtr(item));
    Clay__MeasuredWord ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasuredWord(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__MeasureTextCacheItem CLAY__MEASURE_TEXT_CACHE_ITEM_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__MEASURE_TEXT_CACHE_ITEM_DEFAULT_set(Clay__MeasureTextCacheItem.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__MEASURE_TEXT_CACHE_ITEM_DEFAULT_get();
      Clay__MeasureTextCacheItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasureTextCacheItem(cPtr, false);
      return ret;
    } 
  }

  public static Clay__MeasureTextCacheItemArray Clay__MeasureTextCacheItemArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__MeasureTextCacheItemArray ret = new Clay__MeasureTextCacheItemArray(ClayLibraryPINVOKE.Clay__MeasureTextCacheItemArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__MeasureTextCacheItem Clay__MeasureTextCacheItemArray_Get(Clay__MeasureTextCacheItemArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__MeasureTextCacheItemArray_Get(Clay__MeasureTextCacheItemArray.getCPtr(array), index);
    Clay__MeasureTextCacheItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasureTextCacheItem(cPtr, false);
    return ret;
  }

  public static Clay__MeasureTextCacheItem Clay__MeasureTextCacheItemArray_Add(Clay__MeasureTextCacheItemArray array, Clay__MeasureTextCacheItem item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__MeasureTextCacheItemArray_Add(Clay__MeasureTextCacheItemArray.getCPtr(array), Clay__MeasureTextCacheItem.getCPtr(item));
    Clay__MeasureTextCacheItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasureTextCacheItem(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void Clay__MeasureTextCacheItemArray_Set(Clay__MeasureTextCacheItemArray array, int index, Clay__MeasureTextCacheItem value) {
    ClayLibraryPINVOKE.Clay__MeasureTextCacheItemArray_Set(Clay__MeasureTextCacheItemArray.getCPtr(array), index, Clay__MeasureTextCacheItem.getCPtr(value));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Clay__int32_tArray Clay__int32_tArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__int32_tArray ret = new Clay__int32_tArray(ClayLibraryPINVOKE.Clay__int32_tArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static int Clay__int32_tArray_Get(Clay__int32_tArray array, int index) {
    int ret = ClayLibraryPINVOKE.Clay__int32_tArray_Get(Clay__int32_tArray.getCPtr(array), index);
    return ret;
  }

  public static void Clay__int32_tArray_Add(Clay__int32_tArray array, int item) {
    ClayLibraryPINVOKE.Clay__int32_tArray_Add(Clay__int32_tArray.getCPtr(array), item);
  }

  public static void Clay__int32_tArray_Set(Clay__int32_tArray array, int index, int value) {
    ClayLibraryPINVOKE.Clay__int32_tArray_Set(Clay__int32_tArray.getCPtr(array), index, value);
  }

  public static int Clay__int32_tArray_RemoveSwapback(Clay__int32_tArray array, int index) {
    int ret = ClayLibraryPINVOKE.Clay__int32_tArray_RemoveSwapback(Clay__int32_tArray.getCPtr(array), index);
    return ret;
  }

  public static Clay__LayoutElementTreeNode CLAY__LAYOUT_ELEMENT_TREE_NODE_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_TREE_NODE_DEFAULT_set(Clay__LayoutElementTreeNode.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_TREE_NODE_DEFAULT_get();
      Clay__LayoutElementTreeNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeNode(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementTreeNodeArray Clay__LayoutElementTreeNodeArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__LayoutElementTreeNodeArray ret = new Clay__LayoutElementTreeNodeArray(ClayLibraryPINVOKE.Clay__LayoutElementTreeNodeArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__LayoutElementTreeNode Clay__LayoutElementTreeNodeArray_Add(Clay__LayoutElementTreeNodeArray array, Clay__LayoutElementTreeNode item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementTreeNodeArray_Add(Clay__LayoutElementTreeNodeArray.getCPtr(array), Clay__LayoutElementTreeNode.getCPtr(item));
    Clay__LayoutElementTreeNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeNode(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__LayoutElementTreeNode Clay__LayoutElementTreeNodeArray_Get(Clay__LayoutElementTreeNodeArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementTreeNodeArray_Get(Clay__LayoutElementTreeNodeArray.getCPtr(array), index);
    Clay__LayoutElementTreeNode ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeNode(cPtr, false);
    return ret;
  }

  public static Clay__LayoutElementTreeRoot CLAY__LAYOUT_ELEMENT_TREE_ROOT_DEFAULT {
    set {
      ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_TREE_ROOT_DEFAULT_set(Clay__LayoutElementTreeRoot.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__LAYOUT_ELEMENT_TREE_ROOT_DEFAULT_get();
      Clay__LayoutElementTreeRoot ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeRoot(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementTreeRootArray Clay__LayoutElementTreeRootArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__LayoutElementTreeRootArray ret = new Clay__LayoutElementTreeRootArray(ClayLibraryPINVOKE.Clay__LayoutElementTreeRootArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay__LayoutElementTreeRoot Clay__LayoutElementTreeRootArray_Add(Clay__LayoutElementTreeRootArray array, Clay__LayoutElementTreeRoot item) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementTreeRootArray_Add(Clay__LayoutElementTreeRootArray.getCPtr(array), Clay__LayoutElementTreeRoot.getCPtr(item));
    Clay__LayoutElementTreeRoot ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeRoot(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__LayoutElementTreeRoot Clay__LayoutElementTreeRootArray_Get(Clay__LayoutElementTreeRootArray array, int index) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__LayoutElementTreeRootArray_Get(Clay__LayoutElementTreeRootArray.getCPtr(array), index);
    Clay__LayoutElementTreeRoot ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeRoot(cPtr, false);
    return ret;
  }

  public static Clay__CharArray Clay__CharArray_Allocate_Arena(uint capacity, Clay_Arena arena) {
    Clay__CharArray ret = new Clay__CharArray(ClayLibraryPINVOKE.Clay__CharArray_Allocate_Arena(capacity, Clay_Arena.getCPtr(arena)), true);
    return ret;
  }

  public static Clay_String Clay__WriteStringToCharBuffer(Clay__CharArray buffer, Clay_String string_) {
    Clay_String ret = new Clay_String(ClayLibraryPINVOKE.Clay__WriteStringToCharBuffer(Clay__CharArray.getCPtr(buffer), Clay_String.getCPtr(string_)), true);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_PointerData Clay__pointerInfo {
    set {
      ClayLibraryPINVOKE.Clay__pointerInfo_set(Clay_PointerData.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__pointerInfo_get();
      Clay_PointerData ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_PointerData(cPtr, false);
      return ret;
    } 
  }

  public static Clay_Dimensions Clay__layoutDimensions {
    set {
      ClayLibraryPINVOKE.Clay__layoutDimensions_set(Clay_Dimensions.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutDimensions_get();
      Clay_Dimensions ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Dimensions(cPtr, false);
      return ret;
    } 
  }

  public static Clay_ElementId Clay__dynamicElementIndexBaseHash {
    set {
      ClayLibraryPINVOKE.Clay__dynamicElementIndexBaseHash_set(Clay_ElementId.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__dynamicElementIndexBaseHash_get();
      Clay_ElementId ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_ElementId(cPtr, false);
      return ret;
    } 
  }

  public static uint Clay__dynamicElementIndex {
    set {
      ClayLibraryPINVOKE.Clay__dynamicElementIndex_set(value);
    } 
    get {
      uint ret = ClayLibraryPINVOKE.Clay__dynamicElementIndex_get();
      return ret;
    } 
  }

  public static bool Clay__debugModeEnabled {
    set {
      ClayLibraryPINVOKE.Clay__debugModeEnabled_set(value);
    } 
    get {
      bool ret = ClayLibraryPINVOKE.Clay__debugModeEnabled_get();
      return ret;
    } 
  }

  public static bool Clay__disableCulling {
    set {
      ClayLibraryPINVOKE.Clay__disableCulling_set(value);
    } 
    get {
      bool ret = ClayLibraryPINVOKE.Clay__disableCulling_get();
      return ret;
    } 
  }

  public static bool Clay__externalScrollHandlingEnabled {
    set {
      ClayLibraryPINVOKE.Clay__externalScrollHandlingEnabled_set(value);
    } 
    get {
      bool ret = ClayLibraryPINVOKE.Clay__externalScrollHandlingEnabled_get();
      return ret;
    } 
  }

  public static uint Clay__debugSelectedElementId {
    set {
      ClayLibraryPINVOKE.Clay__debugSelectedElementId_set(value);
    } 
    get {
      uint ret = ClayLibraryPINVOKE.Clay__debugSelectedElementId_get();
      return ret;
    } 
  }

  public static uint Clay__generation {
    set {
      ClayLibraryPINVOKE.Clay__generation_set(value);
    } 
    get {
      uint ret = ClayLibraryPINVOKE.Clay__generation_get();
      return ret;
    } 
  }

  public static ulong Clay__arenaResetOffset {
    set {
      ClayLibraryPINVOKE.Clay__arenaResetOffset_set(value);
    } 
    get {
      ulong ret = ClayLibraryPINVOKE.Clay__arenaResetOffset_get();
      return ret;
    } 
  }

  public static Clay_Arena Clay__internalArena {
    set {
      ClayLibraryPINVOKE.Clay__internalArena_set(Clay_Arena.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__internalArena_get();
      Clay_Arena ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Arena(cPtr, false);
      return ret;
    } 
  }

  public static Clay_LayoutElementArray Clay__layoutElements {
    set {
      ClayLibraryPINVOKE.Clay__layoutElements_set(Clay_LayoutElementArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElements_get();
      Clay_LayoutElementArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElementArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay_RenderCommandArray Clay__renderCommands {
    set {
      ClayLibraryPINVOKE.Clay__renderCommands_set(Clay_RenderCommandArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__renderCommands_get();
      Clay_RenderCommandArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_RenderCommandArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__openLayoutElementStack {
    set {
      ClayLibraryPINVOKE.Clay__openLayoutElementStack_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__openLayoutElementStack_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__layoutElementChildren {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementChildren_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementChildren_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__layoutElementChildrenBuffer {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementChildrenBuffer_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementChildrenBuffer_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__TextElementDataArray Clay__textElementData {
    set {
      ClayLibraryPINVOKE.Clay__textElementData_set(Clay__TextElementDataArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__textElementData_get();
      Clay__TextElementDataArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__TextElementDataArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementPointerArray Clay__imageElementPointers {
    set {
      ClayLibraryPINVOKE.Clay__imageElementPointers_set(Clay__LayoutElementPointerArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__imageElementPointers_get();
      Clay__LayoutElementPointerArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementPointerArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__reusableElementIndexBuffer {
    set {
      ClayLibraryPINVOKE.Clay__reusableElementIndexBuffer_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__reusableElementIndexBuffer_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__layoutElementClipElementIds {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementClipElementIds_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementClipElementIds_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutConfigArray Clay__layoutConfigs {
    set {
      ClayLibraryPINVOKE.Clay__layoutConfigs_set(Clay__LayoutConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutConfigs_get();
      Clay__LayoutConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ElementConfigArray Clay__elementConfigBuffer {
    set {
      ClayLibraryPINVOKE.Clay__elementConfigBuffer_set(Clay__ElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__elementConfigBuffer_get();
      Clay__ElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ElementConfigArray Clay__elementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__elementConfigs_set(Clay__ElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__elementConfigs_get();
      Clay__ElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__RectangleElementConfigArray Clay__rectangleElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__rectangleElementConfigs_set(Clay__RectangleElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__rectangleElementConfigs_get();
      Clay__RectangleElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__RectangleElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__TextElementConfigArray Clay__textElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__textElementConfigs_set(Clay__TextElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__textElementConfigs_get();
      Clay__TextElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__TextElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ImageElementConfigArray Clay__imageElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__imageElementConfigs_set(Clay__ImageElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__imageElementConfigs_get();
      Clay__ImageElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ImageElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__FloatingElementConfigArray Clay__floatingElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__floatingElementConfigs_set(Clay__FloatingElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__floatingElementConfigs_get();
      Clay__FloatingElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__FloatingElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ScrollElementConfigArray Clay__scrollElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__scrollElementConfigs_set(Clay__ScrollElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__scrollElementConfigs_get();
      Clay__ScrollElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ScrollElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__CustomElementConfigArray Clay__customElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__customElementConfigs_set(Clay__CustomElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__customElementConfigs_get();
      Clay__CustomElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__CustomElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__BorderElementConfigArray Clay__borderElementConfigs {
    set {
      ClayLibraryPINVOKE.Clay__borderElementConfigs_set(Clay__BorderElementConfigArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__borderElementConfigs_get();
      Clay__BorderElementConfigArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__BorderElementConfigArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__StringArray Clay__layoutElementIdStrings {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementIdStrings_set(Clay__StringArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementIdStrings_get();
      Clay__StringArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__StringArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__StringArray Clay__wrappedTextLines {
    set {
      ClayLibraryPINVOKE.Clay__wrappedTextLines_set(Clay__StringArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__wrappedTextLines_get();
      Clay__StringArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__StringArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementTreeNodeArray Clay__layoutElementTreeNodeArray1 {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementTreeNodeArray1_set(Clay__LayoutElementTreeNodeArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementTreeNodeArray1_get();
      Clay__LayoutElementTreeNodeArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeNodeArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementTreeRootArray Clay__layoutElementTreeRoots {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementTreeRoots_set(Clay__LayoutElementTreeRootArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementTreeRoots_get();
      Clay__LayoutElementTreeRootArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementTreeRootArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__LayoutElementHashMapItemArray Clay__layoutElementsHashMapInternal {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementsHashMapInternal_set(Clay__LayoutElementHashMapItemArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementsHashMapInternal_get();
      Clay__LayoutElementHashMapItemArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__LayoutElementHashMapItemArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__layoutElementsHashMap {
    set {
      ClayLibraryPINVOKE.Clay__layoutElementsHashMap_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__layoutElementsHashMap_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__MeasureTextCacheItemArray Clay__measureTextHashMapInternal {
    set {
      ClayLibraryPINVOKE.Clay__measureTextHashMapInternal_set(Clay__MeasureTextCacheItemArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__measureTextHashMapInternal_get();
      Clay__MeasureTextCacheItemArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasureTextCacheItemArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__measureTextHashMapInternalFreeList {
    set {
      ClayLibraryPINVOKE.Clay__measureTextHashMapInternalFreeList_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__measureTextHashMapInternalFreeList_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__measureTextHashMap {
    set {
      ClayLibraryPINVOKE.Clay__measureTextHashMap_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__measureTextHashMap_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__MeasuredWordArray Clay__measuredWords {
    set {
      ClayLibraryPINVOKE.Clay__measuredWords_set(Clay__MeasuredWordArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__measuredWords_get();
      Clay__MeasuredWordArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasuredWordArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__measuredWordsFreeList {
    set {
      ClayLibraryPINVOKE.Clay__measuredWordsFreeList_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__measuredWordsFreeList_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__int32_tArray Clay__openClipElementStack {
    set {
      ClayLibraryPINVOKE.Clay__openClipElementStack_set(Clay__int32_tArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__openClipElementStack_get();
      Clay__int32_tArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__int32_tArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ElementIdArray Clay__pointerOverIds {
    set {
      ClayLibraryPINVOKE.Clay__pointerOverIds_set(Clay__ElementIdArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__pointerOverIds_get();
      Clay__ElementIdArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ElementIdArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__ScrollContainerDataInternalArray Clay__scrollContainerDatas {
    set {
      ClayLibraryPINVOKE.Clay__scrollContainerDatas_set(Clay__ScrollContainerDataInternalArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__scrollContainerDatas_get();
      Clay__ScrollContainerDataInternalArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__ScrollContainerDataInternalArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__BoolArray Clay__treeNodeVisited {
    set {
      ClayLibraryPINVOKE.Clay__treeNodeVisited_set(Clay__BoolArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__treeNodeVisited_get();
      Clay__BoolArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__BoolArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__CharArray Clay__dynamicStringData {
    set {
      ClayLibraryPINVOKE.Clay__dynamicStringData_set(Clay__CharArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__dynamicStringData_get();
      Clay__CharArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__CharArray(cPtr, false);
      return ret;
    } 
  }

  public static Clay__DebugElementDataArray Clay__debugElementData {
    set {
      ClayLibraryPINVOKE.Clay__debugElementData_set(Clay__DebugElementDataArray.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__debugElementData_get();
      Clay__DebugElementDataArray ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__DebugElementDataArray(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions Clay__MeasureText {
    set {
      ClayLibraryPINVOKE.Clay__MeasureText_set(SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__MeasureText_get();
      SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions(cPtr, false);
      return ret;
    } 
  }

  public static SWIGTYPE_p_f_unsigned_int__Clay_Vector2 Clay__QueryScrollOffset {
    set {
      ClayLibraryPINVOKE.Clay__QueryScrollOffset_set(SWIGTYPE_p_f_unsigned_int__Clay_Vector2.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__QueryScrollOffset_get();
      SWIGTYPE_p_f_unsigned_int__Clay_Vector2 ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_f_unsigned_int__Clay_Vector2(cPtr, false);
      return ret;
    } 
  }

  public static Clay_LayoutElement Clay__GetOpenLayoutElement() {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__GetOpenLayoutElement();
    Clay_LayoutElement ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElement(cPtr, false);
    return ret;
  }

  public static bool Clay__ElementHasConfig(Clay_LayoutElement element, Clay__ElementConfigType type) {
    bool ret = ClayLibraryPINVOKE.Clay__ElementHasConfig(Clay_LayoutElement.getCPtr(element), (int)type);
    return ret;
  }

  public static Clay_ElementConfigUnion Clay__FindElementConfigWithType(Clay_LayoutElement element, Clay__ElementConfigType type) {
    Clay_ElementConfigUnion ret = new Clay_ElementConfigUnion(ClayLibraryPINVOKE.Clay__FindElementConfigWithType(Clay_LayoutElement.getCPtr(element), (int)type), true);
    return ret;
  }

  public static Clay_ElementId Clay__HashNumber(uint offset, uint seed) {
    Clay_ElementId ret = new Clay_ElementId(ClayLibraryPINVOKE.Clay__HashNumber(offset, seed), true);
    return ret;
  }

  public static Clay_ElementId Clay__Rehash(Clay_ElementId elementId, uint number) {
    Clay_ElementId ret = new Clay_ElementId(ClayLibraryPINVOKE.Clay__Rehash(Clay_ElementId.getCPtr(elementId), number), true);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint Clay__RehashWithNumber(uint id, uint number) {
    uint ret = ClayLibraryPINVOKE.Clay__RehashWithNumber(id, number);
    return ret;
  }

  public static uint Clay__HashTextWithConfig(Clay_String text, Clay_TextElementConfig config) {
    uint ret = ClayLibraryPINVOKE.Clay__HashTextWithConfig(Clay_String.getCPtr(text), Clay_TextElementConfig.getCPtr(config));
    return ret;
  }

  public static Clay__MeasuredWord Clay__AddMeasuredWord(Clay__MeasuredWord word, Clay__MeasuredWord previousWord) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__AddMeasuredWord(Clay__MeasuredWord.getCPtr(word), Clay__MeasuredWord.getCPtr(previousWord));
    Clay__MeasuredWord ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasuredWord(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay__MeasureTextCacheItem Clay__MeasureTextCached(Clay_String text, Clay_TextElementConfig config) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__MeasureTextCached(Clay_String.getCPtr(text), Clay_TextElementConfig.getCPtr(config));
    Clay__MeasureTextCacheItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay__MeasureTextCacheItem(cPtr, false);
    return ret;
  }

  public static bool Clay__PointIsInsideRect(Clay_Vector2 point, Clay_BoundingBox rect) {
    bool ret = ClayLibraryPINVOKE.Clay__PointIsInsideRect(Clay_Vector2.getCPtr(point), Clay_BoundingBox.getCPtr(rect));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_LayoutElementHashMapItem Clay__AddHashMapItem(Clay_ElementId elementId, Clay_LayoutElement layoutElement) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__AddHashMapItem(Clay_ElementId.getCPtr(elementId), Clay_LayoutElement.getCPtr(layoutElement));
    Clay_LayoutElementHashMapItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElementHashMapItem(cPtr, false);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Clay_LayoutElementHashMapItem Clay__GetHashMapItem(uint id) {
    global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__GetHashMapItem(id);
    Clay_LayoutElementHashMapItem ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutElementHashMapItem(cPtr, false);
    return ret;
  }

  public static void Clay__GenerateIdForAnonymousElement(Clay_LayoutElement openLayoutElement) {
    ClayLibraryPINVOKE.Clay__GenerateIdForAnonymousElement(Clay_LayoutElement.getCPtr(openLayoutElement));
  }

  public static void Clay__InitializeEphemeralMemory(Clay_Arena arena) {
    ClayLibraryPINVOKE.Clay__InitializeEphemeralMemory(Clay_Arena.getCPtr(arena));
  }

  public static void Clay__InitializePersistentMemory(Clay_Arena arena) {
    ClayLibraryPINVOKE.Clay__InitializePersistentMemory(Clay_Arena.getCPtr(arena));
  }

  public static float Clay__DistributeSizeAmongChildren(bool xAxis, float sizeToDistribute, Clay__int32_tArray resizableContainerBuffer, Clay__SizeDistributionType distributionType) {
    float ret = ClayLibraryPINVOKE.Clay__DistributeSizeAmongChildren(xAxis, sizeToDistribute, Clay__int32_tArray.getCPtr(resizableContainerBuffer), (int)distributionType);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void Clay__SizeContainersAlongAxis(bool xAxis) {
    ClayLibraryPINVOKE.Clay__SizeContainersAlongAxis(xAxis);
  }

  public static Clay_String Clay__IntToString(int integer) {
    Clay_String ret = new Clay_String(ClayLibraryPINVOKE.Clay__IntToString(integer), true);
    return ret;
  }

  public static void Clay__AddRenderCommand(Clay_RenderCommand renderCommand) {
    ClayLibraryPINVOKE.Clay__AddRenderCommand(Clay_RenderCommand.getCPtr(renderCommand));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool Clay__ElementIsOffscreen(Clay_BoundingBox boundingBox) {
    bool ret = ClayLibraryPINVOKE.Clay__ElementIsOffscreen(Clay_BoundingBox.getCPtr(boundingBox));
    return ret;
  }

  public static void Clay__CalculateFinalLayout() {
    ClayLibraryPINVOKE.Clay__CalculateFinalLayout();
  }

  public static Clay_Color CLAY__DEBUGVIEW_COLOR_1 {
    set {
      ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_1_set(Clay_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_1_get();
      Clay_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Color(cPtr, false);
      return ret;
    } 
  }

  public static Clay_Color CLAY__DEBUGVIEW_COLOR_2 {
    set {
      ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_2_set(Clay_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_2_get();
      Clay_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Color(cPtr, false);
      return ret;
    } 
  }

  public static Clay_Color CLAY__DEBUGVIEW_COLOR_3 {
    set {
      ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_3_set(Clay_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_3_get();
      Clay_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Color(cPtr, false);
      return ret;
    } 
  }

  public static Clay_Color CLAY__DEBUGVIEW_COLOR_4 {
    set {
      ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_4_set(Clay_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_4_get();
      Clay_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Color(cPtr, false);
      return ret;
    } 
  }

  public static Clay_Color CLAY__DEBUGVIEW_COLOR_SELECTED_ROW {
    set {
      ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_SELECTED_ROW_set(Clay_Color.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_COLOR_SELECTED_ROW_get();
      Clay_Color ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_Color(cPtr, false);
      return ret;
    } 
  }

  public static int CLAY__DEBUGVIEW_ROW_HEIGHT {
    get {
      int ret = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_ROW_HEIGHT_get();
      return ret;
    } 
  }

  public static int CLAY__DEBUGVIEW_OUTER_PADDING {
    get {
      int ret = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_OUTER_PADDING_get();
      return ret;
    } 
  }

  public static int CLAY__DEBUGVIEW_INDENT_WIDTH {
    get {
      int ret = ClayLibraryPINVOKE.CLAY__DEBUGVIEW_INDENT_WIDTH_get();
      return ret;
    } 
  }

  public static Clay_TextElementConfig Clay__DebugView_TextNameConfig {
    set {
      ClayLibraryPINVOKE.Clay__DebugView_TextNameConfig_set(Clay_TextElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__DebugView_TextNameConfig_get();
      Clay_TextElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_TextElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay_LayoutConfig Clay__DebugView_ScrollViewItemLayoutConfig {
    set {
      ClayLibraryPINVOKE.Clay__DebugView_ScrollViewItemLayoutConfig_set(Clay_LayoutConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__DebugView_ScrollViewItemLayoutConfig_get();
      Clay_LayoutConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_LayoutConfig(cPtr, false);
      return ret;
    } 
  }

  public static Clay__DebugElementConfigTypeLabelConfig Clay__DebugGetElementConfigTypeLabel(Clay__ElementConfigType type) {
    Clay__DebugElementConfigTypeLabelConfig ret = new Clay__DebugElementConfigTypeLabelConfig(ClayLibraryPINVOKE.Clay__DebugGetElementConfigTypeLabel((int)type), true);
    return ret;
  }

  public static Clay__RenderDebugLayoutData Clay__RenderDebugLayoutElementsList(int initialRootsLength, int highlightedRowIndex) {
    Clay__RenderDebugLayoutData ret = new Clay__RenderDebugLayoutData(ClayLibraryPINVOKE.Clay__RenderDebugLayoutElementsList(initialRootsLength, highlightedRowIndex), true);
    return ret;
  }

  public static void Clay__RenderDebugLayoutSizing(Clay_SizingAxis sizing, Clay_TextElementConfig infoTextConfig) {
    ClayLibraryPINVOKE.Clay__RenderDebugLayoutSizing(Clay_SizingAxis.getCPtr(sizing), Clay_TextElementConfig.getCPtr(infoTextConfig));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay__RenderDebugViewElementConfigHeader(Clay_String elementId, Clay__ElementConfigType type) {
    ClayLibraryPINVOKE.Clay__RenderDebugViewElementConfigHeader(Clay_String.getCPtr(elementId), (int)type);
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay__RenderDebugViewColor(Clay_Color color, Clay_TextElementConfig textConfig) {
    ClayLibraryPINVOKE.Clay__RenderDebugViewColor(Clay_Color.getCPtr(color), Clay_TextElementConfig.getCPtr(textConfig));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay__RenderDebugViewCornerRadius(Clay_CornerRadius cornerRadius, Clay_TextElementConfig textConfig) {
    ClayLibraryPINVOKE.Clay__RenderDebugViewCornerRadius(Clay_CornerRadius.getCPtr(cornerRadius), Clay_TextElementConfig.getCPtr(textConfig));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay__RenderDebugViewBorder(int index, Clay_Border border, Clay_TextElementConfig textConfig) {
    ClayLibraryPINVOKE.Clay__RenderDebugViewBorder(index, Clay_Border.getCPtr(border), Clay_TextElementConfig.getCPtr(textConfig));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void HandleDebugViewCloseButtonInteraction(Clay_ElementId elementId, Clay_PointerData pointerInfo, SWIGTYPE_p_intptr_t userData) {
    ClayLibraryPINVOKE.HandleDebugViewCloseButtonInteraction(Clay_ElementId.getCPtr(elementId), Clay_PointerData.getCPtr(pointerInfo), SWIGTYPE_p_intptr_t.getCPtr(userData));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void Clay__RenderDebugView() {
    ClayLibraryPINVOKE.Clay__RenderDebugView();
  }

  public static Clay_TextElementConfig Clay__DebugView_ErrorTextConfig {
    set {
      ClayLibraryPINVOKE.Clay__DebugView_ErrorTextConfig_set(Clay_TextElementConfig.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = ClayLibraryPINVOKE.Clay__DebugView_ErrorTextConfig_get();
      Clay_TextElementConfig ret = (cPtr == global::System.IntPtr.Zero) ? null : new Clay_TextElementConfig(cPtr, false);
      return ret;
    } 
  }

  public static bool Clay_PointerOver(Clay_ElementId elementId) {
    bool ret = ClayLibraryPINVOKE.Clay_PointerOver(Clay_ElementId.getCPtr(elementId));
    if (ClayLibraryPINVOKE.SWIGPendingException.Pending) throw ClayLibraryPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void Clay_SetExternalScrollHandlingEnabled(bool enabled) {
    ClayLibraryPINVOKE.Clay_SetExternalScrollHandlingEnabled(enabled);
  }

  public static void SetMeasureText(SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions measureText) {
    ClayLibraryPINVOKE.SetMeasureText(SWIGTYPE_p_f_p_Clay_String_p_Clay_TextElementConfig__Clay_Dimensions.getCPtr(measureText));
  }

  public static uint Clay_ChildAlignment_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ChildAlignment_size_t();
    return ret;
  }

  public static uint Clay_SizingMinMax_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_SizingMinMax_size_t();
    return ret;
  }

  public static uint Clay_SizingAxis_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_SizingAxis_size_t();
    return ret;
  }

  public static uint Clay_Sizing_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Sizing_size_t();
    return ret;
  }

  public static uint Clay_Padding_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Padding_size_t();
    return ret;
  }

  public static uint Clay_LayoutConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_LayoutConfig_size_t();
    return ret;
  }

  public static uint Clay_RectangleElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_RectangleElementConfig_size_t();
    return ret;
  }

  public static uint Clay_TextElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_TextElementConfig_size_t();
    return ret;
  }

  public static uint Clay_ImageElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ImageElementConfig_size_t();
    return ret;
  }

  public static uint Clay_FloatingAttachPoints_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_FloatingAttachPoints_size_t();
    return ret;
  }

  public static uint Clay_FloatingElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_FloatingElementConfig_size_t();
    return ret;
  }

  public static uint Clay_CustomElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_CustomElementConfig_size_t();
    return ret;
  }

  public static uint Clay_ScrollElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ScrollElementConfig_size_t();
    return ret;
  }

  public static uint Clay_Border_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Border_size_t();
    return ret;
  }

  public static uint Clay_BorderElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_BorderElementConfig_size_t();
    return ret;
  }

  public static uint Clay_ElementConfigUnion_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ElementConfigUnion_size_t();
    return ret;
  }

  public static uint Clay_ElementConfig_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ElementConfig_size_t();
    return ret;
  }

  public static uint Clay_ScrollContainerData_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ScrollContainerData_size_t();
    return ret;
  }

  public static uint Clay_RenderCommand_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_RenderCommand_size_t();
    return ret;
  }

  public static uint Clay_RenderCommandArray_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_RenderCommandArray_size_t();
    return ret;
  }

  public static uint Clay_PointerData_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_PointerData_size_t();
    return ret;
  }

  public static uint Clay_String_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_String_size_t();
    return ret;
  }

  public static uint Clay__StringArray_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay__StringArray_size_t();
    return ret;
  }

  public static uint Clay_Arena_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Arena_size_t();
    return ret;
  }

  public static uint Clay_Dimensions_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Dimensions_size_t();
    return ret;
  }

  public static uint Clay_Vector2_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Vector2_size_t();
    return ret;
  }

  public static uint Clay_Color_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_Color_size_t();
    return ret;
  }

  public static uint Clay_BoundingBox_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_BoundingBox_size_t();
    return ret;
  }

  public static uint Clay_ElementId_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_ElementId_size_t();
    return ret;
  }

  public static uint Clay_CornerRadius_size_t() {
    uint ret = ClayLibraryPINVOKE.Clay_CornerRadius_size_t();
    return ret;
  }

  public static readonly int CLAY_MAX_ELEMENT_COUNT = ClayLibraryPINVOKE.CLAY_MAX_ELEMENT_COUNT_get();
  public static readonly int CLAY__TEXT_MEASURE_HASH_BUCKET_COUNT = ClayLibraryPINVOKE.CLAY__TEXT_MEASURE_HASH_BUCKET_COUNT_get();
  public static readonly int CLAY_MEASURE_TEXT_CACHE_SIZE = ClayLibraryPINVOKE.CLAY_MEASURE_TEXT_CACHE_SIZE_get();
  public static readonly int CLAY__NULL = ClayLibraryPINVOKE.CLAY__NULL_get();
  public static readonly float CLAY__MAXFLOAT = ClayLibraryPINVOKE.CLAY__MAXFLOAT_get();
}
